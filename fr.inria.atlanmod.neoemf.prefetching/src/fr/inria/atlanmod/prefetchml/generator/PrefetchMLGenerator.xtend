/*
 * generated by Xtext
 */
package fr.inria.atlanmod.prefetchml.generator

import java.io.File
import java.util.Collections
import org.eclipse.emf.common.util.URI
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class PrefetchMLGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		val URI rURI = resource.URI
		println('saving ... ' + rURI)
		println(rURI.toFileString)
		println(rURI.path)
		println(new File("test.bin").absolutePath)
		var Resource rr = resource.resourceSet.createResource(rURI.appendFileExtension('bin'))
		rr.contents.clear
		rr.contents.addAll(resource.contents)
		rr.save(Collections.EMPTY_MAP)
		fsa.generateFile("test.txt","ttt");
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
	}
}
