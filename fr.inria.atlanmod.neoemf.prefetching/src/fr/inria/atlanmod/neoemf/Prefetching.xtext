grammar fr.inria.atlanmod.neoemf.Prefetching with org.eclipse.xtext.common.Terminals

generate prefetching "http://www.inria.fr/atlanmod/neoemf/Prefetching"

Model:
	metamodel=MetamodelImport
	cache=Cache
	plans+=Plan*
;

MetamodelImport:
	'import' nsURI=STRING
;

Cache:
	'use cache' type=CacheType (properties=CacheProperties)?
;

enum CacheType:
	LRU='LRU' |
	PREDICTIVE='Predictive'
;



CacheProperties:
	'[' 'type'refType=RefType 'size'size=INT ']'
;

enum RefType:
	STRONG='strong' |
	SOFT='soft' |
	WEAK='weak'
;

Plan:
	'plan' planId=ID (after=AfterRule)? '{'
		rules+=PrefetchingRule*
	'}'
;

AfterRule:
	'after' planId=[Plan]
;

PrefetchingRule:
	moment=Moment (sourcePattern=SourcePattern)? 'fetch' targetPattern=TargetPattern (probability=INT'%')?
	('{'
		subRules+=PrefetchingRule*
	'}')?
;

SourcePattern:
	pattern=QualifiedName (filter=FilterPattern)?
;

FilterPattern:
	'['stringPattern=STRING']'
;

TargetPattern:
	pattern=QualifiedName (filter=FilterPattern)?
;

enum Moment:
	ON_STARTING='on starting' |
	ON_LOADING='on loading'
;

QualifiedName:
	ID ( '.' ID)*
;