/*
* generated by Xtext
*/
grammar InternalPrefetching;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.inria.atlanmod.neoemf.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.atlanmod.neoemf.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.inria.atlanmod.neoemf.services.PrefetchingGrammarAccess;

}

@parser::members {
 
 	private PrefetchingGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PrefetchingGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelImport
entryRuleMetamodelImport 
:
{ before(grammarAccess.getMetamodelImportRule()); }
	 ruleMetamodelImport
{ after(grammarAccess.getMetamodelImportRule()); } 
	 EOF 
;

// Rule MetamodelImport
ruleMetamodelImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelImportAccess().getGroup()); }
(rule__MetamodelImport__Group__0)
{ after(grammarAccess.getMetamodelImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCache
entryRuleCache 
:
{ before(grammarAccess.getCacheRule()); }
	 ruleCache
{ after(grammarAccess.getCacheRule()); } 
	 EOF 
;

// Rule Cache
ruleCache
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCacheAccess().getGroup()); }
(rule__Cache__Group__0)
{ after(grammarAccess.getCacheAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCacheProperties
entryRuleCacheProperties 
:
{ before(grammarAccess.getCachePropertiesRule()); }
	 ruleCacheProperties
{ after(grammarAccess.getCachePropertiesRule()); } 
	 EOF 
;

// Rule CacheProperties
ruleCacheProperties
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCachePropertiesAccess().getGroup()); }
(rule__CacheProperties__Group__0)
{ after(grammarAccess.getCachePropertiesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan
entryRulePlan 
:
{ before(grammarAccess.getPlanRule()); }
	 rulePlan
{ after(grammarAccess.getPlanRule()); } 
	 EOF 
;

// Rule Plan
rulePlan
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlanAccess().getGroup()); }
(rule__Plan__Group__0)
{ after(grammarAccess.getPlanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAfterClause
entryRuleAfterClause 
:
{ before(grammarAccess.getAfterClauseRule()); }
	 ruleAfterClause
{ after(grammarAccess.getAfterClauseRule()); } 
	 EOF 
;

// Rule AfterClause
ruleAfterClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAfterClauseAccess().getGroup()); }
(rule__AfterClause__Group__0)
{ after(grammarAccess.getAfterClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStartingRule
entryRuleStartingRule 
:
{ before(grammarAccess.getStartingRuleRule()); }
	 ruleStartingRule
{ after(grammarAccess.getStartingRuleRule()); } 
	 EOF 
;

// Rule StartingRule
ruleStartingRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartingRuleAccess().getGroup()); }
(rule__StartingRule__Group__0)
{ after(grammarAccess.getStartingRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessRule
entryRuleAccessRule 
:
{ before(grammarAccess.getAccessRuleRule()); }
	 ruleAccessRule
{ after(grammarAccess.getAccessRuleRule()); } 
	 EOF 
;

// Rule AccessRule
ruleAccessRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessRuleAccess().getGroup()); }
(rule__AccessRule__Group__0)
{ after(grammarAccess.getAccessRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSourcePattern
entryRuleSourcePattern 
:
{ before(grammarAccess.getSourcePatternRule()); }
	 ruleSourcePattern
{ after(grammarAccess.getSourcePatternRule()); } 
	 EOF 
;

// Rule SourcePattern
ruleSourcePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourcePatternAccess().getGroup()); }
(rule__SourcePattern__Group__0)
{ after(grammarAccess.getSourcePatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterPattern
entryRuleFilterPattern 
:
{ before(grammarAccess.getFilterPatternRule()); }
	 ruleFilterPattern
{ after(grammarAccess.getFilterPatternRule()); } 
	 EOF 
;

// Rule FilterPattern
ruleFilterPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterPatternAccess().getGroup()); }
(rule__FilterPattern__Group__0)
{ after(grammarAccess.getFilterPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTargetPattern
entryRuleTargetPattern 
:
{ before(grammarAccess.getTargetPatternRule()); }
	 ruleTargetPattern
{ after(grammarAccess.getTargetPatternRule()); } 
	 EOF 
;

// Rule TargetPattern
ruleTargetPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTargetPatternAccess().getPatternAssignment()); }
(rule__TargetPattern__PatternAssignment)
{ after(grammarAccess.getTargetPatternAccess().getPatternAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePatternExp2
entryRulePatternExp2 
:
{ before(grammarAccess.getPatternExp2Rule()); }
	 rulePatternExp2
{ after(grammarAccess.getPatternExp2Rule()); } 
	 EOF 
;

// Rule PatternExp2
rulePatternExp2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternExp2Access().getGroup()); }
(rule__PatternExp2__Group__0)
{ after(grammarAccess.getPatternExp2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassPatternExp
entryRuleClassPatternExp 
:
{ before(grammarAccess.getClassPatternExpRule()); }
	 ruleClassPatternExp
{ after(grammarAccess.getClassPatternExpRule()); } 
	 EOF 
;

// Rule ClassPatternExp
ruleClassPatternExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassPatternExpAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getClassPatternExpAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule CacheType
ruleCacheType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheTypeAccess().getAlternatives()); }
(rule__CacheType__Alternatives)
{ after(grammarAccess.getCacheTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Plan__RulesAlternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRulesStartingRuleParserRuleCall_5_0_0()); }
	ruleStartingRule
{ after(grammarAccess.getPlanAccess().getRulesStartingRuleParserRuleCall_5_0_0()); }
)

    |(
{ before(grammarAccess.getPlanAccess().getRulesAccessRuleParserRuleCall_5_0_1()); }
	ruleAccessRule
{ after(grammarAccess.getPlanAccess().getRulesAccessRuleParserRuleCall_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getGroup_1_1_0()); }
(rule__PatternExp2__Group_1_1_0__0)
{ after(grammarAccess.getPatternExp2Access().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getPatternExp2Access().getGroup_1_1_1()); }
(rule__PatternExp2__Group_1_1_1__0)
{ after(grammarAccess.getPatternExp2Access().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CacheType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheTypeAccess().getLRUEnumLiteralDeclaration_0()); }
(	'LRU' 
)
{ after(grammarAccess.getCacheTypeAccess().getLRUEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCacheTypeAccess().getMRUEnumLiteralDeclaration_1()); }
(	'MRU' 
)
{ after(grammarAccess.getCacheTypeAccess().getMRUEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelAssignment_0()); }
(rule__Model__MetamodelAssignment_0)
{ after(grammarAccess.getModelAccess().getMetamodelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlansAssignment_1()); }
(rule__Model__PlansAssignment_1)*
{ after(grammarAccess.getModelAccess().getPlansAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelImport__Group__0__Impl
	rule__MetamodelImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getMetamodelImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelImportAccess().getNsURIAssignment_1()); }
(rule__MetamodelImport__NsURIAssignment_1)
{ after(grammarAccess.getMetamodelImportAccess().getNsURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cache__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cache__Group__0__Impl
	rule__Cache__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getUseCacheKeyword_0()); }

	'use cache' 

{ after(grammarAccess.getCacheAccess().getUseCacheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cache__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cache__Group__1__Impl
	rule__Cache__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getTypeAssignment_1()); }
(rule__Cache__TypeAssignment_1)
{ after(grammarAccess.getCacheAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cache__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cache__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getPropertiesAssignment_2()); }
(rule__Cache__PropertiesAssignment_2)?
{ after(grammarAccess.getCacheAccess().getPropertiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CacheProperties__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__0__Impl
	rule__CacheProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCachePropertiesAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__1__Impl
	rule__CacheProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getSizeKeyword_1()); }

	'size' 

{ after(grammarAccess.getCachePropertiesAccess().getSizeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__2__Impl
	rule__CacheProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getSizeAssignment_2()); }
(rule__CacheProperties__SizeAssignment_2)
{ after(grammarAccess.getCachePropertiesAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__3__Impl
	rule__CacheProperties__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getGroup_3()); }
(rule__CacheProperties__Group_3__0)?
{ after(grammarAccess.getCachePropertiesAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getCachePropertiesAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CacheProperties__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group_3__0__Impl
	rule__CacheProperties__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getChunkKeyword_3_0()); }

	'chunk' 

{ after(grammarAccess.getCachePropertiesAccess().getChunkKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getChunkAssignment_3_1()); }
(rule__CacheProperties__ChunkAssignment_3_1)
{ after(grammarAccess.getCachePropertiesAccess().getChunkAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__0__Impl
	rule__Plan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getPlanKeyword_0()); }

	'plan' 

{ after(grammarAccess.getPlanAccess().getPlanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__1__Impl
	rule__Plan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getNameAssignment_1()); }
(rule__Plan__NameAssignment_1)
{ after(grammarAccess.getPlanAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__2__Impl
	rule__Plan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getAfterAssignment_2()); }
(rule__Plan__AfterAssignment_2)?
{ after(grammarAccess.getPlanAccess().getAfterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__3__Impl
	rule__Plan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPlanAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__4__Impl
	rule__Plan__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getCacheAssignment_4()); }
(rule__Plan__CacheAssignment_4)
{ after(grammarAccess.getPlanAccess().getCacheAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__5__Impl
	rule__Plan__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRulesAssignment_5()); }
(rule__Plan__RulesAssignment_5)*
{ after(grammarAccess.getPlanAccess().getRulesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getPlanAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AfterClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AfterClause__Group__0__Impl
	rule__AfterClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAfterClauseAccess().getAfterKeyword_0()); }

	'after' 

{ after(grammarAccess.getAfterClauseAccess().getAfterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AfterClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AfterClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAfterClauseAccess().getPlanAssignment_1()); }
(rule__AfterClause__PlanAssignment_1)
{ after(grammarAccess.getAfterClauseAccess().getPlanAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StartingRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__0__Impl
	rule__StartingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getStartingRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__1__Impl
	rule__StartingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getNameAssignment_1()); }
(rule__StartingRule__NameAssignment_1)
{ after(grammarAccess.getStartingRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__2__Impl
	rule__StartingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getStartingRuleAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__3__Impl
	rule__StartingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getOnStartingKeyword_3()); }

	'on starting' 

{ after(grammarAccess.getStartingRuleAccess().getOnStartingKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__4__Impl
	rule__StartingRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getFetchKeyword_4()); }

	'fetch' 

{ after(grammarAccess.getStartingRuleAccess().getFetchKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getTargetPatternAssignment_5()); }
(rule__StartingRule__TargetPatternAssignment_5)
{ after(grammarAccess.getStartingRuleAccess().getTargetPatternAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AccessRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__0__Impl
	rule__AccessRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getAccessRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__1__Impl
	rule__AccessRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getNameAssignment_1()); }
(rule__AccessRule__NameAssignment_1)
{ after(grammarAccess.getAccessRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__2__Impl
	rule__AccessRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAccessRuleAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__3__Impl
	rule__AccessRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getOnAccessKeyword_3()); }

	'on access' 

{ after(grammarAccess.getAccessRuleAccess().getOnAccessKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__4__Impl
	rule__AccessRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getSourcePatternAssignment_4()); }
(rule__AccessRule__SourcePatternAssignment_4)
{ after(grammarAccess.getAccessRuleAccess().getSourcePatternAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__5__Impl
	rule__AccessRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getFetchKeyword_5()); }

	'fetch' 

{ after(grammarAccess.getAccessRuleAccess().getFetchKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__6__Impl
	rule__AccessRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getTargetPatternAssignment_6()); }
(rule__AccessRule__TargetPatternAssignment_6)
{ after(grammarAccess.getAccessRuleAccess().getTargetPatternAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getGroup_7()); }
(rule__AccessRule__Group_7__0)?
{ after(grammarAccess.getAccessRuleAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AccessRule__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group_7__0__Impl
	rule__AccessRule__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getRemoveKeyword_7_0()); }

	'remove' 

{ after(grammarAccess.getAccessRuleAccess().getRemoveKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group_7__1__Impl
	rule__AccessRule__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getTypeKeyword_7_1()); }

	'type' 

{ after(grammarAccess.getAccessRuleAccess().getTypeKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessRule__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessRule__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getRemoveTypeAssignment_7_2()); }
(rule__AccessRule__RemoveTypeAssignment_7_2)
{ after(grammarAccess.getAccessRuleAccess().getRemoveTypeAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SourcePattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourcePattern__Group__0__Impl
	rule__SourcePattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getSourcePatternAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourcePattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourcePattern__Group__1__Impl
	rule__SourcePattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getPatternAssignment_1()); }
(rule__SourcePattern__PatternAssignment_1)
{ after(grammarAccess.getSourcePatternAccess().getPatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourcePattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourcePattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getFilterAssignment_2()); }
(rule__SourcePattern__FilterAssignment_2)?
{ after(grammarAccess.getSourcePatternAccess().getFilterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FilterPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterPattern__Group__0__Impl
	rule__FilterPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getFilterPatternAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterPattern__Group__1__Impl
	rule__FilterPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getStringPatternAssignment_1()); }
(rule__FilterPattern__StringPatternAssignment_1)
{ after(grammarAccess.getFilterPatternAccess().getStringPatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterPattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterPattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getFilterPatternAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PatternExp2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group__0__Impl
	rule__PatternExp2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPatternExp2Access().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExp2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getGroup_1()); }
(rule__PatternExp2__Group_1__0)*
{ after(grammarAccess.getPatternExp2Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExp2__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group_1__0__Impl
	rule__PatternExp2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getPatternExp2Access().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExp2__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getAlternatives_1_1()); }
(rule__PatternExp2__Alternatives_1_1)
{ after(grammarAccess.getPatternExp2Access().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExp2__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group_1_1_0__0__Impl
	rule__PatternExp2__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getIDTerminalRuleCall_1_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getPatternExp2Access().getIDTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExp2__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getAsteriskKeyword_1_1_0_1()); }

	'*' 

{ after(grammarAccess.getPatternExp2Access().getAsteriskKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExp2__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group_1_1_1__0__Impl
	rule__PatternExp2__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID
{ after(grammarAccess.getPatternExp2Access().getIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExp2__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp2__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp2__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExp2Access().getLeftParenthesisRightParenthesisKeyword_1_1_1_1()); }
(
	'()' 
)?
{ after(grammarAccess.getPatternExp2Access().getLeftParenthesisRightParenthesisKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__MetamodelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelMetamodelImportParserRuleCall_0_0()); }
	ruleMetamodelImport{ after(grammarAccess.getModelAccess().getMetamodelMetamodelImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PlansAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlansPlanParserRuleCall_1_0()); }
	rulePlan{ after(grammarAccess.getModelAccess().getPlansPlanParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelImport__NsURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelImportAccess().getNsURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getMetamodelImportAccess().getNsURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getTypeCacheTypeEnumRuleCall_1_0()); }
	ruleCacheType{ after(grammarAccess.getCacheAccess().getTypeCacheTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__PropertiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getPropertiesCachePropertiesParserRuleCall_2_0()); }
	ruleCacheProperties{ after(grammarAccess.getCacheAccess().getPropertiesCachePropertiesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getCachePropertiesAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__ChunkAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getChunkINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getCachePropertiesAccess().getChunkINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPlanAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__AfterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getAfterAfterClauseParserRuleCall_2_0()); }
	ruleAfterClause{ after(grammarAccess.getPlanAccess().getAfterAfterClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__CacheAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getCacheCacheParserRuleCall_4_0()); }
	ruleCache{ after(grammarAccess.getPlanAccess().getCacheCacheParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__RulesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRulesAlternatives_5_0()); }
(rule__Plan__RulesAlternatives_5_0)
{ after(grammarAccess.getPlanAccess().getRulesAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AfterClause__PlanAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAfterClauseAccess().getPlanPlanCrossReference_1_0()); }
(
{ before(grammarAccess.getAfterClauseAccess().getPlanPlanIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAfterClauseAccess().getPlanPlanIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAfterClauseAccess().getPlanPlanCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStartingRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__TargetPatternAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getTargetPatternTargetPatternParserRuleCall_5_0()); }
	ruleTargetPattern{ after(grammarAccess.getStartingRuleAccess().getTargetPatternTargetPatternParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAccessRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__SourcePatternAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getSourcePatternSourcePatternParserRuleCall_4_0()); }
	ruleSourcePattern{ after(grammarAccess.getAccessRuleAccess().getSourcePatternSourcePatternParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__TargetPatternAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getTargetPatternTargetPatternParserRuleCall_6_0()); }
	ruleTargetPattern{ after(grammarAccess.getAccessRuleAccess().getTargetPatternTargetPatternParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessRule__RemoveTypeAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessRuleAccess().getRemoveTypeClassPatternExpParserRuleCall_7_2_0()); }
	ruleClassPatternExp{ after(grammarAccess.getAccessRuleAccess().getRemoveTypeClassPatternExpParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__PatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getPatternClassPatternExpParserRuleCall_1_0()); }
	ruleClassPatternExp{ after(grammarAccess.getSourcePatternAccess().getPatternClassPatternExpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__FilterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getFilterFilterPatternParserRuleCall_2_0()); }
	ruleFilterPattern{ after(grammarAccess.getSourcePatternAccess().getFilterFilterPatternParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__StringPatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getStringPatternSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFilterPatternAccess().getStringPatternSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPattern__PatternAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPatternAccess().getPatternPatternExp2ParserRuleCall_0()); }
	rulePatternExp2{ after(grammarAccess.getTargetPatternAccess().getPatternPatternExp2ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


