/*
* generated by Xtext
*/
grammar InternalPrefetching;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.inria.atlanmod.neoemf.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.atlanmod.neoemf.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.inria.atlanmod.neoemf.services.PrefetchingGrammarAccess;

}

@parser::members {
 
 	private PrefetchingGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PrefetchingGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelImport
entryRuleMetamodelImport 
:
{ before(grammarAccess.getMetamodelImportRule()); }
	 ruleMetamodelImport
{ after(grammarAccess.getMetamodelImportRule()); } 
	 EOF 
;

// Rule MetamodelImport
ruleMetamodelImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelImportAccess().getGroup()); }
(rule__MetamodelImport__Group__0)
{ after(grammarAccess.getMetamodelImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCache
entryRuleCache 
:
{ before(grammarAccess.getCacheRule()); }
	 ruleCache
{ after(grammarAccess.getCacheRule()); } 
	 EOF 
;

// Rule Cache
ruleCache
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCacheAccess().getGroup()); }
(rule__Cache__Group__0)
{ after(grammarAccess.getCacheAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCacheProperties
entryRuleCacheProperties 
:
{ before(grammarAccess.getCachePropertiesRule()); }
	 ruleCacheProperties
{ after(grammarAccess.getCachePropertiesRule()); } 
	 EOF 
;

// Rule CacheProperties
ruleCacheProperties
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCachePropertiesAccess().getGroup()); }
(rule__CacheProperties__Group__0)
{ after(grammarAccess.getCachePropertiesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan
entryRulePlan 
:
{ before(grammarAccess.getPlanRule()); }
	 rulePlan
{ after(grammarAccess.getPlanRule()); } 
	 EOF 
;

// Rule Plan
rulePlan
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlanAccess().getGroup()); }
(rule__Plan__Group__0)
{ after(grammarAccess.getPlanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAfterClause
entryRuleAfterClause 
:
{ before(grammarAccess.getAfterClauseRule()); }
	 ruleAfterClause
{ after(grammarAccess.getAfterClauseRule()); } 
	 EOF 
;

// Rule AfterClause
ruleAfterClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAfterClauseAccess().getGroup()); }
(rule__AfterClause__Group__0)
{ after(grammarAccess.getAfterClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStartingRule
entryRuleStartingRule 
:
{ before(grammarAccess.getStartingRuleRule()); }
	 ruleStartingRule
{ after(grammarAccess.getStartingRuleRule()); } 
	 EOF 
;

// Rule StartingRule
ruleStartingRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartingRuleAccess().getGroup()); }
(rule__StartingRule__Group__0)
{ after(grammarAccess.getStartingRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoadingRule
entryRuleLoadingRule 
:
{ before(grammarAccess.getLoadingRuleRule()); }
	 ruleLoadingRule
{ after(grammarAccess.getLoadingRuleRule()); } 
	 EOF 
;

// Rule LoadingRule
ruleLoadingRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoadingRuleAccess().getGroup()); }
(rule__LoadingRule__Group__0)
{ after(grammarAccess.getLoadingRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSourcePattern
entryRuleSourcePattern 
:
{ before(grammarAccess.getSourcePatternRule()); }
	 ruleSourcePattern
{ after(grammarAccess.getSourcePatternRule()); } 
	 EOF 
;

// Rule SourcePattern
ruleSourcePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourcePatternAccess().getGroup()); }
(rule__SourcePattern__Group__0)
{ after(grammarAccess.getSourcePatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterPattern
entryRuleFilterPattern 
:
{ before(grammarAccess.getFilterPatternRule()); }
	 ruleFilterPattern
{ after(grammarAccess.getFilterPatternRule()); } 
	 EOF 
;

// Rule FilterPattern
ruleFilterPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterPatternAccess().getGroup()); }
(rule__FilterPattern__Group__0)
{ after(grammarAccess.getFilterPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTargetPattern
entryRuleTargetPattern 
:
{ before(grammarAccess.getTargetPatternRule()); }
	 ruleTargetPattern
{ after(grammarAccess.getTargetPatternRule()); } 
	 EOF 
;

// Rule TargetPattern
ruleTargetPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTargetPatternAccess().getGroup()); }
(rule__TargetPattern__Group__0)
{ after(grammarAccess.getTargetPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePatternExp
entryRulePatternExp 
:
{ before(grammarAccess.getPatternExpRule()); }
	 rulePatternExp
{ after(grammarAccess.getPatternExpRule()); } 
	 EOF 
;

// Rule PatternExp
rulePatternExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternExpAccess().getGroup()); }
(rule__PatternExp__Group__0)
{ after(grammarAccess.getPatternExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule CacheType
ruleCacheType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheTypeAccess().getAlternatives()); }
(rule__CacheType__Alternatives)
{ after(grammarAccess.getCacheTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Plan__RulesAlternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRulesStartingRuleParserRuleCall_4_0_0()); }
	ruleStartingRule
{ after(grammarAccess.getPlanAccess().getRulesStartingRuleParserRuleCall_4_0_0()); }
)

    |(
{ before(grammarAccess.getPlanAccess().getRulesLoadingRuleParserRuleCall_4_0_1()); }
	ruleLoadingRule
{ after(grammarAccess.getPlanAccess().getRulesLoadingRuleParserRuleCall_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CacheType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheTypeAccess().getLRUEnumLiteralDeclaration_0()); }
(	'LRU' 
)
{ after(grammarAccess.getCacheTypeAccess().getLRUEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCacheTypeAccess().getPREDICTIVEEnumLiteralDeclaration_1()); }
(	'Predictive' 
)
{ after(grammarAccess.getCacheTypeAccess().getPREDICTIVEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelAssignment_0()); }
(rule__Model__MetamodelAssignment_0)
{ after(grammarAccess.getModelAccess().getMetamodelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCacheAssignment_1()); }
(rule__Model__CacheAssignment_1)
{ after(grammarAccess.getModelAccess().getCacheAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlansAssignment_2()); }
(rule__Model__PlansAssignment_2)*
{ after(grammarAccess.getModelAccess().getPlansAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MetamodelImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelImport__Group__0__Impl
	rule__MetamodelImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getMetamodelImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelImportAccess().getNsURIAssignment_1()); }
(rule__MetamodelImport__NsURIAssignment_1)
{ after(grammarAccess.getMetamodelImportAccess().getNsURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cache__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cache__Group__0__Impl
	rule__Cache__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getUseCacheKeyword_0()); }

	'use cache' 

{ after(grammarAccess.getCacheAccess().getUseCacheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cache__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cache__Group__1__Impl
	rule__Cache__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getTypeAssignment_1()); }
(rule__Cache__TypeAssignment_1)
{ after(grammarAccess.getCacheAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cache__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cache__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getPropertiesAssignment_2()); }
(rule__Cache__PropertiesAssignment_2)?
{ after(grammarAccess.getCacheAccess().getPropertiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CacheProperties__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__0__Impl
	rule__CacheProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCachePropertiesAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__1__Impl
	rule__CacheProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getSizeKeyword_1()); }

	'size' 

{ after(grammarAccess.getCachePropertiesAccess().getSizeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__2__Impl
	rule__CacheProperties__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getSizeAssignment_2()); }
(rule__CacheProperties__SizeAssignment_2)
{ after(grammarAccess.getCachePropertiesAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheProperties__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheProperties__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCachePropertiesAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Plan__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__0__Impl
	rule__Plan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getPlanKeyword_0()); }

	'plan' 

{ after(grammarAccess.getPlanAccess().getPlanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__1__Impl
	rule__Plan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getNameAssignment_1()); }
(rule__Plan__NameAssignment_1)
{ after(grammarAccess.getPlanAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__2__Impl
	rule__Plan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getAfterAssignment_2()); }
(rule__Plan__AfterAssignment_2)?
{ after(grammarAccess.getPlanAccess().getAfterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__3__Impl
	rule__Plan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPlanAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__4__Impl
	rule__Plan__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRulesAssignment_4()); }
(rule__Plan__RulesAssignment_4)*
{ after(grammarAccess.getPlanAccess().getRulesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPlanAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AfterClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AfterClause__Group__0__Impl
	rule__AfterClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAfterClauseAccess().getAfterKeyword_0()); }

	'after' 

{ after(grammarAccess.getAfterClauseAccess().getAfterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AfterClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AfterClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAfterClauseAccess().getPlanAssignment_1()); }
(rule__AfterClause__PlanAssignment_1)
{ after(grammarAccess.getAfterClauseAccess().getPlanAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StartingRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__0__Impl
	rule__StartingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getOnStartingKeyword_0()); }

	'on starting' 

{ after(grammarAccess.getStartingRuleAccess().getOnStartingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__1__Impl
	rule__StartingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getFetchKeyword_1()); }

	'fetch' 

{ after(grammarAccess.getStartingRuleAccess().getFetchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__2__Impl
	rule__StartingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getTargetPatternAssignment_2()); }
(rule__StartingRule__TargetPatternAssignment_2)
{ after(grammarAccess.getStartingRuleAccess().getTargetPatternAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__3__Impl
	rule__StartingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getGroup_3()); }
(rule__StartingRule__Group_3__0)?
{ after(grammarAccess.getStartingRuleAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getGroup_4()); }
(rule__StartingRule__Group_4__0)
{ after(grammarAccess.getStartingRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StartingRule__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group_3__0__Impl
	rule__StartingRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getProbabilityAssignment_3_0()); }
(rule__StartingRule__ProbabilityAssignment_3_0)
{ after(grammarAccess.getStartingRuleAccess().getProbabilityAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getPercentSignKeyword_3_1()); }

	'%' 

{ after(grammarAccess.getStartingRuleAccess().getPercentSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StartingRule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group_4__0__Impl
	rule__StartingRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getStartingRuleAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group_4__1__Impl
	rule__StartingRule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getSubRulesAssignment_4_1()); }
(rule__StartingRule__SubRulesAssignment_4_1)*
{ after(grammarAccess.getStartingRuleAccess().getSubRulesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartingRule__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartingRule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getRightCurlyBracketKeyword_4_2()); }

	'}' 

{ after(grammarAccess.getStartingRuleAccess().getRightCurlyBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LoadingRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group__0__Impl
	rule__LoadingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getOnLoadingKeyword_0()); }

	'on loading' 

{ after(grammarAccess.getLoadingRuleAccess().getOnLoadingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group__1__Impl
	rule__LoadingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getSourcePatternAssignment_1()); }
(rule__LoadingRule__SourcePatternAssignment_1)?
{ after(grammarAccess.getLoadingRuleAccess().getSourcePatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group__2__Impl
	rule__LoadingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getFetchKeyword_2()); }

	'fetch' 

{ after(grammarAccess.getLoadingRuleAccess().getFetchKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group__3__Impl
	rule__LoadingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getTargetPatternAssignment_3()); }
(rule__LoadingRule__TargetPatternAssignment_3)
{ after(grammarAccess.getLoadingRuleAccess().getTargetPatternAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group__4__Impl
	rule__LoadingRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getGroup_4()); }
(rule__LoadingRule__Group_4__0)?
{ after(grammarAccess.getLoadingRuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getGroup_5()); }
(rule__LoadingRule__Group_5__0)?
{ after(grammarAccess.getLoadingRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LoadingRule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group_4__0__Impl
	rule__LoadingRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getProbabilityAssignment_4_0()); }
(rule__LoadingRule__ProbabilityAssignment_4_0)
{ after(grammarAccess.getLoadingRuleAccess().getProbabilityAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getPercentSignKeyword_4_1()); }

	'%' 

{ after(grammarAccess.getLoadingRuleAccess().getPercentSignKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoadingRule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group_5__0__Impl
	rule__LoadingRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getLoadingRuleAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group_5__1__Impl
	rule__LoadingRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getSubRulesAssignment_5_1()); }
(rule__LoadingRule__SubRulesAssignment_5_1)*
{ after(grammarAccess.getLoadingRuleAccess().getSubRulesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoadingRule__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoadingRule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getRightCurlyBracketKeyword_5_2()); }

	'}' 

{ after(grammarAccess.getLoadingRuleAccess().getRightCurlyBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SourcePattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourcePattern__Group__0__Impl
	rule__SourcePattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getPatternAssignment_0()); }
(rule__SourcePattern__PatternAssignment_0)
{ after(grammarAccess.getSourcePatternAccess().getPatternAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourcePattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourcePattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getFilterAssignment_1()); }
(rule__SourcePattern__FilterAssignment_1)?
{ after(grammarAccess.getSourcePatternAccess().getFilterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilterPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterPattern__Group__0__Impl
	rule__FilterPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getFilterPatternAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterPattern__Group__1__Impl
	rule__FilterPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getStringPatternAssignment_1()); }
(rule__FilterPattern__StringPatternAssignment_1)
{ after(grammarAccess.getFilterPatternAccess().getStringPatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterPattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterPattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getFilterPatternAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TargetPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TargetPattern__Group__0__Impl
	rule__TargetPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPatternAccess().getPatternAssignment_0()); }
(rule__TargetPattern__PatternAssignment_0)
{ after(grammarAccess.getTargetPatternAccess().getPatternAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TargetPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TargetPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPatternAccess().getFilterAssignment_1()); }
(rule__TargetPattern__FilterAssignment_1)?
{ after(grammarAccess.getTargetPatternAccess().getFilterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp__Group__0__Impl
	rule__PatternExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPatternExpAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpAccess().getGroup_1()); }
(rule__PatternExp__Group_1__0)*
{ after(grammarAccess.getPatternExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp__Group_1__0__Impl
	rule__PatternExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getPatternExpAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getPatternExpAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__MetamodelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelMetamodelImportParserRuleCall_0_0()); }
	ruleMetamodelImport{ after(grammarAccess.getModelAccess().getMetamodelMetamodelImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CacheAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCacheCacheParserRuleCall_1_0()); }
	ruleCache{ after(grammarAccess.getModelAccess().getCacheCacheParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PlansAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlansPlanParserRuleCall_2_0()); }
	rulePlan{ after(grammarAccess.getModelAccess().getPlansPlanParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelImport__NsURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelImportAccess().getNsURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getMetamodelImportAccess().getNsURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getTypeCacheTypeEnumRuleCall_1_0()); }
	ruleCacheType{ after(grammarAccess.getCacheAccess().getTypeCacheTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cache__PropertiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheAccess().getPropertiesCachePropertiesParserRuleCall_2_0()); }
	ruleCacheProperties{ after(grammarAccess.getCacheAccess().getPropertiesCachePropertiesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CacheProperties__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCachePropertiesAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getCachePropertiesAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPlanAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__AfterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getAfterAfterClauseParserRuleCall_2_0()); }
	ruleAfterClause{ after(grammarAccess.getPlanAccess().getAfterAfterClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__RulesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getRulesAlternatives_4_0()); }
(rule__Plan__RulesAlternatives_4_0)
{ after(grammarAccess.getPlanAccess().getRulesAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AfterClause__PlanAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAfterClauseAccess().getPlanPlanCrossReference_1_0()); }
(
{ before(grammarAccess.getAfterClauseAccess().getPlanPlanIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAfterClauseAccess().getPlanPlanIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAfterClauseAccess().getPlanPlanCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__TargetPatternAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getTargetPatternTargetPatternParserRuleCall_2_0()); }
	ruleTargetPattern{ after(grammarAccess.getStartingRuleAccess().getTargetPatternTargetPatternParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__ProbabilityAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getProbabilityINTTerminalRuleCall_3_0_0()); }
	RULE_INT{ after(grammarAccess.getStartingRuleAccess().getProbabilityINTTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartingRule__SubRulesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartingRuleAccess().getSubRulesLoadingRuleParserRuleCall_4_1_0()); }
	ruleLoadingRule{ after(grammarAccess.getStartingRuleAccess().getSubRulesLoadingRuleParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__SourcePatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getSourcePatternSourcePatternParserRuleCall_1_0()); }
	ruleSourcePattern{ after(grammarAccess.getLoadingRuleAccess().getSourcePatternSourcePatternParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__TargetPatternAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getTargetPatternTargetPatternParserRuleCall_3_0()); }
	ruleTargetPattern{ after(grammarAccess.getLoadingRuleAccess().getTargetPatternTargetPatternParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__ProbabilityAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getProbabilityINTTerminalRuleCall_4_0_0()); }
	RULE_INT{ after(grammarAccess.getLoadingRuleAccess().getProbabilityINTTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoadingRule__SubRulesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadingRuleAccess().getSubRulesLoadingRuleParserRuleCall_5_1_0()); }
	ruleLoadingRule{ after(grammarAccess.getLoadingRuleAccess().getSubRulesLoadingRuleParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__PatternAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getPatternPatternExpParserRuleCall_0_0()); }
	rulePatternExp{ after(grammarAccess.getSourcePatternAccess().getPatternPatternExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourcePattern__FilterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourcePatternAccess().getFilterFilterPatternParserRuleCall_1_0()); }
	ruleFilterPattern{ after(grammarAccess.getSourcePatternAccess().getFilterFilterPatternParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterPattern__StringPatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterPatternAccess().getStringPatternSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFilterPatternAccess().getStringPatternSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPattern__PatternAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPatternAccess().getPatternPatternExpParserRuleCall_0_0()); }
	rulePatternExp{ after(grammarAccess.getTargetPatternAccess().getPatternPatternExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPattern__FilterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPatternAccess().getFilterFilterPatternParserRuleCall_1_0()); }
	ruleFilterPattern{ after(grammarAccess.getTargetPatternAccess().getFilterFilterPatternParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


